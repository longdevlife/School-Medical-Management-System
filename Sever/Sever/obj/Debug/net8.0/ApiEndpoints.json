[
  {
    "ContainingType": "Sever.Controllers.AdminController",
    "Method": "CreateAccounts",
    "RelativePath": "api/admin/create-accounts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "users",
        "Type": "System.Collections.Generic.List\u00601[[Sever.DTO.User.CreateUserRequest, Sever, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AdminController",
    "Method": "DeleteAccount",
    "RelativePath": "api/admin/delete-user",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AdminController",
    "Method": "GetAdmin",
    "RelativePath": "api/admin/get-admin",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AdminController",
    "Method": "GetUsersFromFile",
    "RelativePath": "api/admin/get-users-from-file",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AdminController",
    "Method": "UpdateAccount",
    "RelativePath": "api/admin/update-admin-info",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userRequest",
        "Type": "Sever.DTO.User.UpdateUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AuthController",
    "Method": "ForgotPassword",
    "RelativePath": "api/auth/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Sever.DTO.Authentication.ForgotPasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AuthController",
    "Method": "GoogleLogin",
    "RelativePath": "api/auth/google-login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "google",
        "Type": "Sever.DTO.Authentication.GoogleLoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Sever.DTO.Authentication.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "refreshToken",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AuthController",
    "Method": "Refresh",
    "RelativePath": "api/auth/refresh",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tokenRequest",
        "Type": "Sever.DTO.Authentication.TokenResponse",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Sever.DTO.Authentication.ResetPasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.MedicalEventController",
    "Method": "CreateMedicalEvent",
    "RelativePath": "api/medicalEvent",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Sever.DTO.MedicalEvent.MedicineEventRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.MedicalEventController",
    "Method": "GetMedicalEvent",
    "RelativePath": "api/medicalEvent/{medicalEventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "medicalEventId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.MedicalEventController",
    "Method": "UpdateMedicalEventStatus",
    "RelativePath": "api/medicalEvent/{medicalEventId}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "medicalEventId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "Sever.DTO.MedicalEvent.MedicalEventUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.MedicalEventController",
    "Method": "UploadImage",
    "RelativePath": "api/medicalEvent/{medicalEventId}/upload-image",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "medicalEventId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.MedicineController",
    "Method": "CreateMedicine",
    "RelativePath": "api/medicine",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "medicineDto",
        "Type": "Sever.DTO.SendMedicine.MedicineDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.MedicineController",
    "Method": "UpdateMedicine",
    "RelativePath": "api/medicine/{medicineId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "medicineId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "Sever.DTO.SendMedicine.MedicineUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.MedicineController",
    "Method": "GetMedicineHistory",
    "RelativePath": "api/medicine/{medicineId}/history",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "medicineId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.MedicineController",
    "Method": "ChangeStatus",
    "RelativePath": "api/medicine/{medicineId}/status",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "medicineId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "changeStatusDto",
        "Type": "Sever.DTO.SendMedicine.ChangeStatusDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.MedicineController",
    "Method": "UploadMedicinePhoto",
    "RelativePath": "api/medicine/upload-photo",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "File",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "MedicineID",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.ValuesController",
    "Method": "CheckToken",
    "RelativePath": "api/Values/check-token",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Sever.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Sever.WeatherForecast, Sever, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]