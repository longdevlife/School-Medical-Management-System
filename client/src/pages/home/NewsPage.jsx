import React, { useState, useEffect } from "react";
import { Layout, Row, Col, Typography, Pagination, Modal } from "antd";
import AppHeader from "../../components/Layout/Header";
import { getSchoolInfo } from "../../api/Schoolinfo";
import { getAllNews } from "../../api/newsApi";

const { Content, Footer } = Layout;
const { Title, Paragraph } = Typography;

const NewsPage = () => {
  const [collapsed, setCollapsed] = useState(false);
  const [isHeaderSticky, setIsHeaderSticky] = useState(false);
  const [currentPage, setCurrentPage] = useState(1);
  const [schoolInfo, setSchoolInfo] = useState(null);
  const [newsList, setNewsList] = useState([]);
  const [loading, setLoading] = useState(false);
  
  // New states for news detail modal
  const [selectedNews, setSelectedNews] = useState(null);
  const [newsDetailModalVisible, setNewsDetailModalVisible] = useState(false);

  React.useEffect(() => {
    const handleScroll = () => {
      setIsHeaderSticky(window.scrollY > 50);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  // Fetch news from API
  useEffect(() => {
    const fetchNews = async () => {
      try {
        setLoading(true);
        const response = await getAllNews();
        console.log('üì∞ News API response:', response);
        console.log('üìä Raw news data:', response.data);
        console.log('üî¢ Number of news items:', response.data.length);
        
        // Log the actual structure of the first item to see what fields exist
        if (response.data.length > 0) {
          console.log('üîç First news item structure:', response.data[0]);
          console.log('üîë Available keys in first item:', Object.keys(response.data[0]));
          
          // Log all field values to see what's actually there
          const firstItem = response.data[0];
          console.log('üîç Field values in first item:');
          Object.keys(firstItem).forEach(key => {
            console.log(`  ${key}:`, firstItem[key], `(type: ${typeof firstItem[key]})`);
          });
        }
        
        // Use the actual field names from your API response
        const transformedNews = response.data.map((item, index) => {
          console.log(`üîÑ Processing item ${index + 1}:`, item);
          
          // Use exact field names based on the API response structure
          // Since all fields were undefined before, let's try all possible variations
          const newsData = {
            id: item.newsID || item.NewsID || item.id || item.ID || `news-${index + 1}`,
            title: item.title || item.Title || item.newsTitle || item.name || `Tin t·ª©c ${index + 1}`,
            dateTime: item.dateTime || item.DateTime || item.date || item.Date || item.createdAt || item.created_at || new Date().toISOString(),
            summary: item.summary || item.Summary || item.description || item.Description || '',
            body: item.body || item.Body || item.content || item.Content || item.detail || item.Detail || '',
            status: item.status || item.Status || item.isActive || item.IsActive || item.active || 1,
            userID: item.userID || item.UserID || item.userId || item.UserId || item.user_id || ''
          };
          
          console.log(`‚úÖ Transformed item ${index + 1}:`, newsData);
          
          return {
            id: newsData.id,
            title: newsData.title,
            date: new Date(newsData.dateTime).toLocaleDateString('vi-VN', {
              year: 'numeric',
              month: 'long', 
              day: 'numeric'
            }),
            content: newsData.summary || newsData.body || 'N·ªôi dung tin t·ª©c',
            fullContent: newsData.body || newsData.summary || 'N·ªôi dung chi ti·∫øt tin t·ª©c',
            status: newsData.status,
            userID: newsData.userID
          };
        });
        
        console.log('üîÑ All transformed news:', transformedNews);
        
        // Don't filter by status for now to see all news items
        // const activeNews = transformedNews.filter(news => news.status === 1 || news.status === true);
        console.log('üìã Setting news list to all items:', transformedNews);
        
        setNewsList(transformedNews);
        
      } catch (error) {
        console.error('‚ùå Error fetching news:', error);
        console.error('üìÑ Error details:', {
          message: error.message,
          status: error.response?.status,
          data: error.response?.data
        });
        
        // Enhanced fallback data with more items for testing
        console.log('üîÑ Using enhanced fallback mock data');
        setNewsList([
          {
            id: "N0001",
            title: "Kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ cho h·ªçc sinh nƒÉm 2025",
            date: "5 th√°ng 7, 2025",
            content: "Ti√™m ch·ªßng ƒë·ª£t 1 v√†o th√°ng 7.",
            fullContent: "Chi ti·∫øt l·ªãch ti√™m ch·ªßng cho h·ªçc sinh to√†n tr∆∞·ªùng v√†o th√°ng 7, vui l√≤ng theo d√µi th√¥ng b√°o t·ª´ y t·∫ø tr∆∞·ªùng.",
            status: 1,
            userID: "U0002"
          },
          {
            id: "N0002", 
            title: "Kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥",
            date: "5 th√°ng 7, 2025",
            content: "Kh√°m s·ª©c kh·ªèe to√†n tr∆∞·ªùng.",
            fullContent: "B·∫Øt ƒë·∫ßu t·ª´ ng√†y 10/07, nh√† tr∆∞·ªùng s·∫Ω t·ªï ch·ª©c kh√°m s·ª©c kh·ªèe cho to√†n b·ªô h·ªçc sinh. ƒê·ªÅ ngh·ªã c√°c l·ªõp ph·ªëi h·ª£p t·ªët.",
            status: 1,
            userID: "U0002"
          },
          {
            id: "N0003",
            title: "H∆∞·ªõng d·∫´n ph√≤ng b·ªánh s·ªët xu·∫•t huy·∫øt", 
            date: "5 th√°ng 7, 2025",
            content: "C√°ch ph√≤ng ch·ªëng s·ªët xu·∫•t huy·∫øt.",
            fullContent: "ƒê·ªÉ ph√≤ng ch·ªëng s·ªët xu·∫•t huy·∫øt, h·ªçc sinh c·∫ßn m·∫∑c qu·∫ßn √°o d√†i tay, ng·ªß m√†n v√† di·ªát mu·ªói th∆∞·ªùng xuy√™n.",
            status: 1,
            userID: "U0003"
          },
          {
            id: "N0004",
            title: "Ch∆∞∆°ng tr√¨nh dinh d∆∞·ª°ng h·ªçc ƒë∆∞·ªùng m·ªõi",
            date: "25 th√°ng 6, 2025", 
            content: "Tri·ªÉn khai ch∆∞∆°ng tr√¨nh b·ªØa ƒÉn h·ªçc ƒë∆∞·ªùng c√¢n ƒë·ªëi dinh d∆∞·ª°ng cho h·ªçc sinh.",
            fullContent: "Nh·∫±m n√¢ng cao s·ª©c kh·ªèe v√† ph√°t tri·ªÉn to√†n di·ªán cho h·ªçc sinh, h·ªá th·ªëng y t·∫ø h·ªçc ƒë∆∞·ªùng ph·ªëi h·ª£p v·ªõi c√°c chuy√™n gia dinh d∆∞·ª°ng tri·ªÉn khai ch∆∞∆°ng tr√¨nh b·ªØa ƒÉn h·ªçc ƒë∆∞·ªùng c√¢n ƒë·ªëi, ƒëa d·∫°ng v√† an to√†n th·ª±c ph·∫©m.",
            status: 1,
            userID: "U0002"
          },
          {
            id: "N0005",
            title: "H·ªôi th·∫£o ph√≤ng ch·ªëng d·ªãch b·ªánh trong tr∆∞·ªùng h·ªçc",
            date: "15 th√°ng 6, 2025",
            content: "N√¢ng cao √Ω th·ª©c v·ªá sinh c√° nh√¢n v√† c·ªông ƒë·ªìng cho h·ªçc sinh, gi√°o vi√™n v√† ph·ª• huynh.",
            fullContent: "H·ªôi th·∫£o chuy√™n ƒë·ªÅ v·ªÅ ph√≤ng ch·ªëng d·ªãch b·ªánh, n√¢ng cao √Ω th·ª©c v·ªá sinh c√° nh√¢n v√† c·ªông ƒë·ªìng cho h·ªçc sinh, gi√°o vi√™n v√† ph·ª• huynh. Ch∆∞∆°ng tr√¨nh bao g·ªìm c√°c ch·ªß ƒë·ªÅ v·ªÅ v·ªá sinh tay, kh·∫©u trang, gi√£n c√°ch x√£ h·ªôi v√† c√°c bi·ªán ph√°p ph√≤ng ng·ª´a d·ªãch b·ªánh hi·ªáu qu·∫£.",
            status: 1,
            userID: "U0003"
          }
        ]);
      } finally {
        setLoading(false);
        console.log('üèÅ News loading completed');
      }
    };

    console.log('üöÄ Starting news fetch...');
    fetchNews();
  }, []);

  useEffect(() => {
    const fetchSchoolInfo = async () => {
      try {
        const response = await getSchoolInfo();
        const info = response.data;
        if (info && Object.keys(info).length > 0) {
          setSchoolInfo(info);
        } else {
          // Fallback data
          setSchoolInfo({
            Name: "Y T·∫ø H·ªçc ƒê∆∞·ªùng",
            Address: "123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM",
            Hotline: "1800 6688",
            Email: "info@ytehocduong.edu.vn"
          });
        }
      } catch (error) {
        console.error('Error fetching school info:', error);
        setSchoolInfo({
          Name: "Y T·∫ø H·ªçc ƒê∆∞·ªùng",
          Address: "123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM",
          Hotline: "1800 6688",
          Email: "info@ytehocduong.edu.vn"
        });
      }
    };

    fetchSchoolInfo();
  }, []);

  const customStyles = `
    @keyframes spin-slow { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
    .animate-spin-slow { animation: spin-slow 8s linear infinite; }
    @keyframes fadeInUp { from { opacity: 0; transform: translateY(30px); } to { opacity: 1; transform: translateY(0); } }
    @keyframes fadeInLeft { from { opacity: 0; transform: translateX(-30px); } to { opacity: 1; transform: translateX(0); } }
    @keyframes fadeInRight { from { opacity: 0; transform: translateX(30px); } to { opacity: 1; transform: translateX(0); } }
    @keyframes float { 0%, 100% { transform: translateY(0px); } 50% { transform: translateY(-10px); } }
    @keyframes glow { 0%, 100% { box-shadow: 0 0 20px rgba(59, 130, 246, 0.3); } 50% { box-shadow: 0 0 30px rgba(59, 130, 246, 0.5); } }
    .animate-fadeInUp { animation: fadeInUp 0.8s ease-out forwards; }
    .animate-fadeInLeft { animation: fadeInLeft 0.8s ease-out forwards; }
    .animate-fadeInRight { animation: fadeInRight 0.8s ease-out forwards; }
    .animate-float { animation: float 3s ease-in-out infinite; }
    .animate-glow { animation: glow 2s ease-in-out infinite; }
    .ant-layout-header { margin: 0 !important; padding: 0 !important; }
    .sticky-header { position: fixed !important; top: 0; left: 0; right: 0; z-index: 1000; background: rgba(255,255,255,0.85); backdrop-filter: blur(15px); border-bottom: 1px solid rgba(59,130,246,0.15); box-shadow: 0 8px 32px rgba(0,0,0,0.12); transition: all 0.4s cubic-bezier(0.4,0,0.2,1); transform: translateY(0); }
    .sticky-header .ant-layout-header { background: transparent !important; border-bottom: none !important; }
    .sticky-header > div { padding: 8px 0; transition: padding 0.3s ease; }
    .sticky-header::before { content: ''; position: absolute; top: 0; left: 0; right: 0; height: 1px; background: linear-gradient(90deg, transparent, rgba(59,130,246,0.3), transparent); }
  `;

  const pageSize = 5; // TƒÉng s·ªë l∆∞·ª£ng tin t·ª©c hi·ªÉn th·ªã m·ªói trang
  const [currentPageSize, setCurrentPageSize] = useState(10); // TƒÉng t·ª´ 5 l√™n 10
  const pagedNews = newsList.slice((currentPage-1)*currentPageSize, currentPage*currentPageSize);
  
  console.log('üìÑ Current page:', currentPage);
  console.log('üìã Paged news for display:', pagedNews);
  console.log('üî¢ Total news items:', newsList.length);

  // Function to handle clicking on a news item
  const handleNewsClick = (newsItem) => {
    setSelectedNews(newsItem);
    setNewsDetailModalVisible(true);
  };

  // Function to close news detail modal
  const handleCloseNewsDetail = () => {
    setNewsDetailModalVisible(false);
    setSelectedNews(null);
  };

  return (
    <>
      <style>{customStyles}</style>
      <Layout className="min-h-screen">
        <Content className={`p-0 ${isHeaderSticky ? "pt-16" : ""} transition-all duration-300`}>
          <div className="relative min-h-screen bg-gradient-to-br from-blue-50 via-blue-100/50 to-blue-200/30 flex flex-col overflow-hidden">
            <div className={`relative z-30 w-full flex-shrink-0 transition-all duration-300 ${isHeaderSticky ? "sticky-header" : ""}`}>
              <div className="w-full">
                <AppHeader collapsed={collapsed} setCollapsed={setCollapsed} />
              </div>
            </div>
            <div className="absolute inset-0 overflow-hidden">
              <div className="absolute top-20 right-20 w-32 h-32 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full opacity-40 animate-pulse" style={{ animationDelay: "2s" }}></div>
              <div className="absolute bottom-32 left-16 w-24 h-24 bg-gradient-to-br from-blue-200 to-blue-300 rounded-full opacity-30 animate-pulse" style={{ animationDelay: "2.5s" }}></div>
              <div className="absolute top-1/2 right-1/3 w-16 h-16 bg-gradient-to-br from-blue-50 to-blue-100 rounded-full opacity-50 animate-pulse" style={{ animationDelay: "3s" }}></div>
              <div className="absolute inset-0 opacity-5 animate-fadeInUp" style={{ animationDelay: "0.5s" }}>
                <div className="w-full h-full" style={{ backgroundImage: `radial-gradient(circle at 1px 1px, #3B82F6 1px, transparent 0)`, backgroundSize: "40px 40px" }}></div>
              </div>
              <div className="absolute top-1/4 left-10 w-2 h-20 bg-gradient-to-b from-blue-300 to-transparent rounded-full opacity-30 animate-fadeInLeft" style={{ animationDelay: "1.5s" }}></div>
              <div className="absolute bottom-1/4 right-10 w-2 h-16 bg-gradient-to-t from-blue-400 to-transparent rounded-full opacity-25 animate-fadeInRight" style={{ animationDelay: "1.8s" }}></div>
              <div className="absolute top-32 left-1/4 w-6 h-6 border-2 border-blue-300 rounded rotate-45 opacity-20 animate-spin-slow"></div>
              <div className="absolute bottom-40 right-1/4 w-4 h-4 bg-blue-200 rotate-12 opacity-30 animate-float" style={{ animationDelay: "2.2s" }}></div>
            </div>
            <div className="flex-1 w-full relative z-10 flex items-center justify-center overflow-auto" style={{ minHeight: '600px' }}>
              <Row gutter={[32, 32]} align="middle" className="w-full h-full min-h-[600px]">
                {/* Left: News Illustration */}
                <Col xs={24} lg={10} className="h-full flex items-center justify-center">
                  <div className="relative h-full flex items-center justify-center px-6 lg:px-8">
                    {/* Background decorative circles */}
                    <div className="absolute inset-0 flex items-center justify-center">
                      <div className="w-72 h-72 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full opacity-15 animate-pulse"></div>
                      <div className="absolute w-80 h-80 bg-blue-500 rounded-full opacity-10"></div>
                    </div>
                    {/* News Illustration */}
                    <div className="relative z-10 animate-fadeInRight animate-float">
                      <img
                        src="/SchoolMedical.gif"
                        alt="Tin t·ª©c y t·∫ø h·ªçc ƒë∆∞·ªùng"
                        className="w-full max-w-sm mx-auto object-contain drop-shadow-2xl rounded-2xl"
                        onError={e => { e.target.onerror = null; e.target.src = '/anhBacsi.png'; }}
                      />
                    </div>
                  </div>
                </Col>
                
                {/* Right: News Content */}
                <Col xs={24} lg={14} className="h-full flex items-center justify-center">
                  <div className="space-y-8 w-full max-w-4xl text-center animate-fadeInLeft mx-auto bg-white/95 rounded-3xl shadow-2xl border border-blue-100/40 backdrop-blur-md p-10" style={{ minHeight: '65vh' }}>
                    <div className="text-center mb-8">
                      <Title className="text-5xl xl:text-6xl font-bold text-blue-700 leading-tight animate-fadeInUp mb-4" style={{ animationDelay: "0.2s" }}>
                        Tin t·ª©c y t·∫ø h·ªçc ƒë∆∞·ªùng
                      </Title>
                      <Paragraph className="text-xl text-gray-700 leading-relaxed animate-fadeInUp max-w-3xl mx-auto" style={{ animationDelay: "0.4s" }}>
                        C·∫≠p nh·∫≠t c√°c tin t·ª©c, s·ª± ki·ªán m·ªõi nh·∫•t v·ªÅ y t·∫ø h·ªçc ƒë∆∞·ªùng, s·ª©c kh·ªèe h·ªçc sinh, c√°c ch∆∞∆°ng tr√¨nh, ho·∫°t ƒë·ªông n·ªïi b·∫≠t v√† th√¥ng b√°o quan tr·ªçng t·ª´ h·ªá th·ªëng.
                      </Paragraph>
                    </div>
                    
                    {/* News List - Pagination */}
                    <div className="space-y-5 mt-8 animate-fadeInUp text-left" style={{ animationDelay: "0.6s" }}>
                      {loading ? (
                        <div className="text-center py-8">
                          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
                          <p className="mt-4 text-gray-600">ƒêang t·∫£i tin t·ª©c...</p>
                        </div>
                      ) : pagedNews.length > 0 ? (
                        pagedNews.map((item, idx) => (
                          <div 
                            key={item.id || idx} 
                            className="bg-gradient-to-r from-blue-50 to-blue-100/80 rounded-2xl p-5 shadow-md border border-blue-200 hover:shadow-lg transition-all cursor-pointer hover:from-blue-100 hover:to-blue-200/80 transform hover:-translate-y-1"
                            onClick={() => handleNewsClick(item)}
                          >
                            <h3 className="text-lg font-bold text-blue-700 mb-2 line-clamp-2">{item.title}</h3>
                            <p className="text-gray-600 mb-2 text-sm font-medium">{item.date}</p>
                            <p className="text-gray-700 text-sm leading-relaxed line-clamp-2 mb-3">{item.content}</p>
                            <div className="text-right">
                              <span className="text-blue-600 text-xs font-semibold bg-blue-100 px-2 py-1 rounded-full hover:bg-blue-200 transition-colors">
                                Xem chi ti·∫øt ‚Üí
                              </span>
                            </div>
                          </div>
                        ))
                      ) : (
                        <div className="text-center py-10 text-gray-500">
                          <div className="mb-4">
                            <span className="text-6xl">üì∞</span>
                          </div>
                          <p className="text-lg font-medium">Hi·ªán t·∫°i ch∆∞a c√≥ tin t·ª©c n√†o ƒë∆∞·ª£c ƒëƒÉng t·∫£i.</p>
                        </div>
                      )}
                    </div>
                    
                    {newsList.length > 4 && ( // Ch·ªâ hi·ªán pagination khi c√≥ nhi·ªÅu h∆°n 4 tin t·ª©c
                      <div className="flex justify-center pt-4">
                        <Pagination
                          current={currentPage}
                          pageSize={currentPageSize}
                          total={newsList.length}
                          onChange={(page) => setCurrentPage(page)}
                          showSizeChanger={true}
                          pageSizeOptions={['5', '10', '20', '50']} // TƒÉng c√°c t√πy ch·ªçn
                          showQuickJumper={true}
                          size="default"
                          className="custom-pagination"
                          showTotal={(total, range) => 
                            `${range[0]}-${range[1]} c·ªßa ${total} tin t·ª©c`
                          }
                          onShowSizeChange={(current, size) => {
                            setCurrentPageSize(Number(size));
                            setCurrentPage(1); // Reset to first page when changing page size
                          }}
                        />
                      </div>
                    )}
                  </div>
                </Col>
              </Row>
            </div>
          </div>
        </Content>
        <Footer className="bg-gray-900 text-white p-0" style={{ backgroundColor: "#37AEEF" }}>
          <div className="py-16">
            <div className="max-w-6xl mx-auto px-6">
              <Row gutter={[48, 32]}>
                <Col xs={24} sm={12} lg={6}>
                  <div className="space-y-4">
                    <h4 className="text-xl font-bold text-white mb-6">D·ªäCH V·ª§</h4>
                    <ul className="space-y-3">
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">Kh√°m s·ª©c kh·ªèe</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">ChƒÉm s√≥c y t·∫ø</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">Dinh d∆∞·ª°ng h·ªçc ƒë∆∞·ªùng</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">An to√†n tr∆∞·ªùng h·ªçc</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">T∆∞ v·∫•n s·ª©c kh·ªèe</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">D·ªãch v·ª• kh·∫©n c·∫•p</a></li>
                    </ul>
                  </div>
                </Col>
                <Col xs={24} sm={12} lg={6}>
                  <div className="space-y-4">
                    <h4 className="text-xl font-bold text-white mb-6">V·ªÄ CH√öNG T√îI</h4>
                    <ul className="space-y-3">
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">Gi·ªõi thi·ªáu</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">ƒê·ªôi ng≈© y t·∫ø</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">C∆° s·ªü v·∫≠t ch·∫•t</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">Ch·ª©ng nh·∫≠n</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">Tin t·ª©c & S·ª± ki·ªán</a></li>
                    </ul>
                  </div>
                </Col>
                <Col xs={24} sm={12} lg={6}>
                  <div className="space-y-4">
                    <h4 className="text-xl font-bold text-white mb-6">H·ªñ TR·ª¢</h4>
                    <ul className="space-y-3">
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">Ch√≠nh s√°ch b·∫£o m·∫≠t</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng</a></li>
                      <li><a href="#" className="text-white hover:text-blue-700 transition-colors">Li√™n h·ªá h·ªó tr·ª£</a></li>
                    </ul>
                  </div>
                </Col>
                <Col xs={24} sm={12} lg={6}>
                  <div className="space-y-4">
                    <h4 className="text-xl font-bold text-white mb-6">üìû LI√äN H·ªÜ</h4>
                    <div className="space-y-4">
                      <div className="flex items-start space-x-3">
                        <span className="text-white flex-shrink-0">üìç</span>
                        <span className="text-white break-words">
                          {schoolInfo?.Address || schoolInfo?.address || "123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM"}
                        </span>
                      </div>
                      <div className="flex items-center space-x-3">
                        <span className="text-white">üìû</span>
                        <a href={`tel:${schoolInfo?.Hotline || schoolInfo?.hotline || "1800 6688"}`} className="text-white hover:text-blue-200 transition-colors">
                          {schoolInfo?.Hotline || schoolInfo?.hotline || "1800 6688"}
                        </a>
                      </div>
                      <div className="flex items-center space-x-3">
                        <span className="text-white">‚úâÔ∏è</span>
                        <a href={`mailto:${schoolInfo?.Email || schoolInfo?.email || "info@ytehocduong.edu.vn"}`} className="text-white hover:text-blue-200 transition-colors break-all">
                          {schoolInfo?.Email || schoolInfo?.email || "info@ytehocduong.edu.vn"}
                        </a>
                      </div>
                      <div className="flex items-center space-x-3">
                        <span className="text-white">üåê</span>
                        <a href="https://www.ytehocduong.edu.vn" target="_blank" rel="noopener noreferrer" className="text-white hover:text-blue-200 transition-colors">
                          www.ytehocduong.edu.vn
                        </a>
                      </div>
                    </div>
                  </div>
                </Col>
              </Row>
            </div>
          </div>
          <div className="border-t text-white py-6">
            <div className="max-w-6xl mx-auto px-6">
              <div className="flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0">
                <span className="text-white">¬© 2024 {schoolInfo?.Name || schoolInfo?.name || "Y T·∫ø H·ªçc ƒê∆∞·ªùng"}. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</span>
                <div className="flex space-x-6">
                  <a href="#" className="text-white hover:text-white transition-colors">ƒêi·ªÅu kho·∫£n</a>
                  <a href="#" className="text-white hover:text-white transition-colors">B·∫£o m·∫≠t</a>
                  <a href="#" className="text-white hover:ttext-white transition-colors">Li√™n h·ªá</a>
                </div>
              </div>
            </div>
          </div>
        </Footer>

        {/* News Detail Modal */}
        <Modal
          title={
            <div className="flex items-center justify-center space-x-2">
              <span className="text-blue-700 font-bold text-xl">üì∞</span>
              <span className="font-bold text-blue-700 text-lg">Chi ti·∫øt tin t·ª©c</span>
            </div>
          }
          open={newsDetailModalVisible}
          onCancel={handleCloseNewsDetail}
          footer={null}
          width={900}
          centered
          className="news-detail-modal"
          styles={{
            body: {
              padding: '24px',
              maxHeight: '75vh',
              overflowY: 'auto'
            }
          }}
        >
          {selectedNews && (
            <div className="space-y-6">
              {/* News Header */}
              <div className="text-center border-b border-gray-200 pb-6">
                <h1 className="text-3xl font-bold text-blue-700 leading-tight mb-4">
                  {selectedNews.title}
                </h1>
                <div className="flex items-center justify-center space-x-6 text-sm text-gray-600">
                  <span className="flex items-center space-x-2 bg-blue-50 px-3 py-1 rounded-full">
                    <span>üìÖ</span>
                    <span className="font-medium">{selectedNews.date}</span>
                  </span>
                  {selectedNews.userID && (
                    <span className="flex items-center space-x-2 bg-gray-50 px-3 py-1 rounded-full">
                      <span>üë§</span>
                      <span className="font-medium">ID: {selectedNews.userID}</span>
                    </span>
                  )}
                  <span className="flex items-center space-x-2">
                    <span>üîñ</span>
                    <span className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium">
                      ƒêang ho·∫°t ƒë·ªông
                    </span>
                  </span>
                </div>
              </div>

              {/* News Content */}
              <div className="prose max-w-none">
                {selectedNews.fullContent ? (
                  <div className="space-y-6">
                    {/* Summary Section */}
                    <div className="bg-gradient-to-r from-blue-50 to-blue-100 p-6 rounded-lg border-l-4 border-blue-400">
                      <div className="flex items-center mb-3">
                        <span className="text-blue-600 text-lg mr-2">üìã</span>
                        <h3 className="font-bold text-blue-700 text-lg">T√≥m t·∫Øt</h3>
                      </div>
                      <p className="text-gray-700 leading-relaxed text-base">{selectedNews.content}</p>
                    </div>
                    
                    {/* Full Content Section */}
                    <div className="bg-white p-6 rounded-lg border border-gray-200">
                      <div className="flex items-center mb-4">
                        <span className="text-gray-600 text-lg mr-2">üìÑ</span>
                        <h3 className="font-bold text-gray-800 text-lg">N·ªôi dung chi ti·∫øt</h3>
                      </div>
                      <div className="text-gray-700 leading-relaxed whitespace-pre-line text-base">
                        {selectedNews.fullContent}
                      </div>
                    </div>
                  </div>
                ) : (
                  <div className="bg-white p-6 rounded-lg border border-gray-200 text-center">
                    <div className="text-gray-800 leading-relaxed text-base">
                      <p>{selectedNews.content}</p>
                    </div>
                  </div>
                )}
              </div>

              {/* Footer Info */}
              <div className="border-t border-gray-200 pt-4">
                <div className="flex items-center justify-between text-sm text-gray-500 bg-gray-50 p-4 rounded-lg">
                  <div className="flex items-center space-x-2">
                    <span>üÜî</span>
                    <span className="font-medium">ID tin t·ª©c: {selectedNews.id}</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <span>‚úÖ</span>
                    <span className="font-medium">Tr·∫°ng th√°i: ƒê√£ xu·∫•t b·∫£n</span>
                  </div>
                </div>
              </div>
            </div>
          )}
        </Modal>
      </Layout>
    </>
  );
};

export default NewsPage;